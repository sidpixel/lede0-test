#=================================================
# https://github.com/sidpixel/lede
# Description: Build OpenWrt using GitHub Actions
# License: MIT
# Author: sidpixel
#=================================================

name: 8632.yml

on:
  release:
    types: [published]
  push:
    branches: 
      - main
    paths:
      - '8632.config'
      - 'ready.sh'
      - 'feeds.conf.default'
      - '.github/workflows/8632.yml'

  schedule:
    - cron: 31 1 1 */1 *
env:
  #REPO_URL: https://github.com/coolsnowwolf/lede
  #REPO_URL: https://github.com/Lienol/openwrt
  #REPO_BRANCH: main
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-22.03
  #REPO_URL: https://github.com/immortalwrt/immortalwrt
  #REPO_BRANCH: master
  RELEASE_VERSION: 22.03
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 8632.config
  OS_ARCH: X86_32
  READY_SH: ready.sh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment and space clean
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E rm -rf /imagegeneration /opt  /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android  /usr/share/sbt* /usr/local/share/chromium* /usr/local/share/powershell* 
        sudo -E docker rmi `docker images -q`
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt-get update
        sudo -E apt-get  purge -y azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
        sudo -E apt-get install -y libcurl4-openssl-dev build-essential clang flex bison gcc  g++ gawk gcc-multilib g++-multilib gettext git libncurses-dev libssl-dev python3-distutils rsync unzip zlib1g-dev file wget
        sudo -E apt-get  -y upgrade
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"

    - name: Clone source code
      run: |

        df -hT $PWD
        git clone  -b $REPO_BRANCH $REPO_URL openwrt

    - name: Load custom feeds and Load custom configuration
      working-directory: ./openwrt
      run: |
        #mv $GITHUB_WORKSPACE/$FEEDS_CONF feeds.conf.default
        bash -x $GITHUB_WORKSPACE/$READY_SH
        ls
        cat feeds.conf.default    

    - name: load the  feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean 
        ./scripts/feeds update -a
        ./scripts/feeds install -a


    - name: create default config  package
      working-directory: ./openwrt
      run: |
        mv -f  $GITHUB_WORKSPACE/$CONFIG_FILE  .config
        make defconfig -j$(nproc)

    - name: download  package
      working-directory: ./openwrt
      run: make download -j$(nproc)

    - name: Compile the firmware
      working-directory: ./openwrt
      run: |
        ls -alh
        make -j$(nproc) V=s


    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact
        rm -rf $(find openwrt/bin/targets/*/*/ -type d -name "packages")
        #cp -rf $(find openwrt/bin/packages/ -type f -name "*.ipk") artifact/package/
        cp -rf $(find openwrt/bin/targets/*/*/ -type f -name "*.buildinfo" -o -name "openwrt*" ) artifact/
        cd ./artifact/
        gzip --best *
        ls -Ahl

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      with:
        name: openwrt-firmware
        path:  artifact/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: OpenWRT-${{ env.OS_ARCH }}-${{ env.FILE_DATE }}-${{ env.RELEASE_VERSION }}
        files: artifact/*
