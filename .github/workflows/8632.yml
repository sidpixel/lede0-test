#=================================================
# https://github.com/sidpixel/lede
# Description: Build OpenWrt using GitHub Actions
# License: MIT
# Author: sidpixel
#=================================================

name: 8632.yml

on:
  release:
    types: [published]
  push:
    branches: 
      - main
    paths:
      - '8632.config'
      - 'ready.sh'
      - 'feeds.conf.default'
      - '.github/workflows/8632.yml'

  schedule:
    - cron: 32 1 1 */1 *
env:
  REPO_URL: https://github.com/openwrt/openwrt
  #REPO_BRANCH: openwrt-22.03
  REPO_BRANCH: master
  RELEASE_VERSION: latest
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: 8632.config
  OS_ARCH: X86_32
  READY_SH: ready.sh

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment and space clean
      run: |
        sudo rm -rf /imagegeneration /opt  /usr/local/aws* /usr/local/julia* /usr/share/swift* /usr/share/sbt* \
        /usr/local/share/chromium* /usr/local/share/powershell* 
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt-get update 
        sudo -E apt-get -y upgrade
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch unzip \
        lib32gcc-s1 libc6-dev-i386 subversion flex node-uglify gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev \
        texinfo libglib2.0-dev xmlto qemu-utils  libelf-dev autoconf automake libtool autopoint device-tree-compiler \
        libuv1-dev  zlib1g-dev upx-ucl node-uglify antlr3 gperf wget swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        df -h $PWD
        git clone  -b $REPO_BRANCH $REPO_URL openwrt

    - name: Load custom feeds and Load custom configuration
      working-directory: ./openwrt
      run: |
        #mv $GITHUB_WORKSPACE/$FEEDS_CONF feeds.conf.default
        bash -x $GITHUB_WORKSPACE/$READY_SH
        #sed -i 's/192.168.1.1/10.0.0.1/g' package/base-files/files/bin/config_generate
        ls
        cat feeds.conf.default    

    - name: load the  feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds clean 
        ./scripts/feeds update -a
        ./scripts/feeds install -a


    - name: create default config  package
      working-directory: ./openwrt
      run: |
        mv -f  $GITHUB_WORKSPACE/$CONFIG_FILE  .config
        make defconfig -j$(nproc)

    - name: download  package
      working-directory: ./openwrt
      run: make download -j$(nproc)

    - name: Compile the firmware
      working-directory: ./openwrt
      run: |
        ls -alh
        make -j8
        # make -j$(nproc) || make -j1 || make -j1 V=s


    - name: Check space usage
      if: (!cancelled())
      run: df -h

    - name: Organize files
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact
        rm -rf $(find openwrt/bin/targets/*/*/ -type d -name "packages")
        ls -alh openwrt/bin/targets/*/*/
        #cp -rf $(find openwrt/bin/packages/ -type f -name "*.ipk") artifact/package/
        cp -rf $(find openwrt/bin/targets/*/*/  -name "openwrt*" -o -name "*.buildinfo" ) artifact/
        cd ./artifact/
        gzip --best *
        ls -Ahl

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      with:
        name: openwrt-firmware
        path:  artifact/

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: LEDE-${{ env.OS_ARCH }}-${{ env.RELEASE_VERSION }}-${{ env.FILE_DATE }}
        files: artifact/*
